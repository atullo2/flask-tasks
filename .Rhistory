.75×(.9-.5)2 + .25×(.4-.5)2
.75*(.9-.5)2 + .25*(.4-.5)2
.75*(.9-.5)^2+.25*(.4-.5)^2
293.94+8.67
355.94/2
exp(c(1,0,0)*10) / sum(exp(c(1,0,0)*10))
exp(c(1,0,0)*0.01) / sum(exp(c(1,0,0)*0.01))
exp(c(1,0,0)*0.1) / sum(exp(c(1,0,0)*0.1))
20/13*12
20.13*12
10*17 + 3*20/13
22.72*4
22.72*4 - 13.74
360* 14.25
rep(c("rldm", "ict"), 10)
install.packages("RPostgreSQL")
library(RPostgreSQL)
library(RPostgreSQL)
rm(list=ls())
# 'host': '127.0.0.1',
# 'user': 'wwwbramleylabppl_flaskuser',
# 'password': 'testpassword',
# 'database': 'wwwbramleylabppl_flask'
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "wwwbramleylabppl_flask",
host = "127.0.0.1", port = 5432,
user = "wwwbramleylabppl_flaskuser",
password = "testpassword")
# con <- DBI::dbConnect(odbc::odbc(),
#                       Driver   = "[your driver's name]",
#                       Server   = "[your server's path]",
#                       Database = "[your database's name]",
#                       UID      = rstudioapi::askForPassword("Database user"),
#                       PWD      = rstudioapi::askForPassword("Database password")
#                       Port     = 5432)
library(RPostgreSQL)
rm(list=ls())
# 'host': '127.0.0.1',
# 'user': 'wwwbramleylabppl_flaskuser',
# 'password': 'testpassword',
# 'database': 'wwwbramleylabppl_flask'
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "wwwbramleylabppl_flask",
host = "127.0.0.1", port = 5432,
user = "wwwbramleylabppl_flaskuser",
password = "testpassword")
# con <- DBI::dbConnect(odbc::odbc(),
#                       Driver   = "[your driver's name]",
#                       Server   = "[your server's path]",
#                       Database = "[your database's name]",
#                       UID      = rstudioapi::askForPassword("Database user"),
#                       PWD      = rstudioapi::askForPassword("Database password")
#                       Port     = 5432)
system2("ssh", c("-L8080:localhost:80", "-N", "-T", "otherhost"), wait=FALSE)
system2("ssh", c("-L8080:localhost:80", "-N", "-T", "wwwbramleylabppl@chost4.is.ed.ac.uk"), wait=FALSE)
conn <- dbConnect(RPostgreSQL::PostgreSQL(), dbname = 'wwwbramleylabppl_flask',
host = 'localhost', port = 5432,
password = 'testpassword'
user = 'wwwbramleylabppl_flaskuser')
conn <- dbConnect(RPostgreSQL::PostgreSQL(), dbname = 'wwwbramleylabppl_flask',
host = 'localhost', port = 5432,
password = 'testpassword',
user = 'wwwbramleylabppl_flaskuser')
conn <- dbConnect(RPostgreSQL::PostgreSQL(), dbname = 'wwwbramleylabppl_flask',
host = 'localhost', port = 1111,
password = 'testpassword',
user = 'wwwbramleylabppl_flaskuser')
library(RPostgreSQL)
rm(list=ls())
ssh -L 1111:localhost:5432 wwwbramleylabppl@chost4.is.ed.ac.uk
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = 'wwwbramleylabppl_flask',
host = 'localhost', port = 1111,
password = 'testpassword',
user = 'wwwbramleylabppl_flaskuser')
dbExistsTable(con, "participants")
dbExistsTable(con, "participant")
dbExistsTable(con, "task")
# query the data from postgreSQL
df_postgres <- dbGetQuery(con, "SELECT * from task")
df_postgres
# query the data from postgreSQL
taskdata <- dbGetQuery(con, "SELECT * from task")
# query the data from postgreSQL
taskdata <- dbGetQuery(con, "SELECT * from task")
taskdata.taskdata
taskdata$id
taskdata$id
taskdata$trialwise
taskdata$subjectwise
taskdata$participant
td$subjectwise
td$trialwise
# query the task data (td) from postgreSQL
td <- dbGetQuery(con, "SELECT * from task")
td$subjectwise
td$trialwise
df.tw<-data.frame(id=td$id)
library(rjson)
fromJSON(td$subjectwise)
sapply(td$subjectwise, fromJSON)
sapply(td$subjectwise, "fromJSON")
td$subjectwise
td$subjectwise[1]
fromJSON(td$subjectwise[1])
help(fromJSON)
fromJSON(td$subjectwise[[1]])
fromJSON("{'age': '1', 'gender': 'female', 'date': '2019_07_07', 'time': '17_53_37', 'instructions_duration': 8176, 'task_duration': 11734, 'engaging': '10', 'difficult': '10'}")
js <- chartr("\'\"","\"\'",td$subjectwise[[1]])
fromJSON(js)
inv_fromJSON<-function(js)
{
js <- chartr("\'\"","\"\'",td$subjectwise[[1]])
fromJSON(js)
}
sapply(td$subjectwise, inv_fromJSON)
out<-sapply(td$subjectwise, inv_fromJSON)
out
out[[1]]
out[[2]]
out[[24]]
out<-sapply(td$subjectwise, inv_fromJSON, simplify=F)
out
out<-sapply(td$subjectwise, inv_fromJSON, simplify=F)
out
out[[1]]
out[[2]]
out[[3]]
inv_fromJSON<-function(js)
{
js <- chartr("\'\"","\"\'",js)
fromJSON(js)
}
out<-sapply(td$subjectwise, inv_fromJSON, simplify=F)
out
out[[1]]
rbind(out)
rbind(out[[1]], out[[2]])
sw[[1]]
sw<-sapply(td$subjectwise, inv_fromJSON, simplify=F)
tw<-sapply(td$trialwise, inv_fromJSON, simplify=F)
sw[[1]]
as.data.frame(sw[[1]])
sapply(sw, as.data.frame)
sapply(sapply(sw, as.data.frame), rbind)
sw<-sapply(sapply(td$subjectwise, inv_fromJSON, simplify=F), as.data.frame)
sw[[1]]
rbind(sw[[1]], sw[[2]])
sw[[2]]
sw[[3]]
sw[[-1]]
sw<-sw[c(2:3)]
rbind(sw[[1]], sw[[2]])
library(RPostgreSQL)
library(rjson)
rm(list=ls())
#First run this in the terminal to connect to the database
#ssh -L 1111:localhost:5432 wwwbramleylabppl@chost4.is.ed.ac.uk
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = 'wwwbramleylabppl_flask',
host = 'localhost', port = 1111,
password = 'testpassword',
user = 'wwwbramleylabppl_flaskuser')
# If its worked you should be able to detect these databases
dbExistsTable(con, "participant")
dbExistsTable(con, "task")
# Then you can pull the task data from postgreSQL
td <- dbGetQuery(con, "SELECT * from task")
#Here it is as json
td$subjectwise
td$trialwise
df.sw<-data.frame(ix=td$id,
id=td$participant)
#Un-jsonify it
inv_fromJSON<-function(js)
{
js <- chartr("\'\"","\"\'",js)
fromJSON(js)
}
#and turn each subject into a dataframe
sw<-sapply(sapply(td$subjectwise, inv_fromJSON, simplify=F), as.data.frame)
#Combine them
df.sw.aux<-sw[[1]]
for (i in 2:length(sw))
{
df.sw.aux<-rbind(df.sw.aux, sw[[i]])
}
#And append them to the id and upi dataframe
df.sw<-cbind(df.sw, df.sw.aux)
df.sw
sw
#Combine them
df.sw.aux<-sw[[1]]
df.sw.aux
sapply(td$subjectwise, inv_fromJSON, simplify=F)
tmp<-sapply(td$subjectwise, inv_fromJSON, simplify=F)
#and turn each subject into a dataframe
sw<-sapply(sapply(td$subjectwise, inv_fromJSON, simplify=F), as.data.frame, simplify=F)
library(RPostgreSQL)
library(rjson)
rm(list=ls())
#First run this in the terminal to connect to the database
#ssh -L 1111:localhost:5432 wwwbramleylabppl@chost4.is.ed.ac.uk
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = 'wwwbramleylabppl_flask',
host = 'localhost', port = 1111,
password = 'testpassword',
user = 'wwwbramleylabppl_flaskuser')
# If its worked you should be able to detect these databases
dbExistsTable(con, "participant")
dbExistsTable(con, "task")
# Then you can pull the task data from postgreSQL
td <- dbGetQuery(con, "SELECT * from task")
#Here it is as json
td$subjectwise
td$trialwise
#Un-jsonify it
inv_fromJSON<-function(js)
{
js <- chartr("\'\"","\"\'",js)
fromJSON(js)
}
#and turn each subject into a dataframe
sw<-sapply(sapply(td$subjectwise, inv_fromJSON, simplify=F), as.data.frame, simplify=F)
#Combine them
df.sw.aux<-sw[[1]]
for (i in 2:length(sw))
{
df.sw.aux<-rbind(df.sw.aux, sw[[i]])
}
#And append them to the id and upi dataframe
df.sw<-data.frame(ix=td$id,
id=td$participant)
df.sw<-cbind(df.sw, df.sw.aux)
df.sw
tw<-sapply(td$trialwise, inv_fromJSON, simplify=F)
tw
tw[[1]]
tw<-sapply(sapply(td$trialwise, inv_fromJSON, simplify=F), as.data.frame, simplify=F)
tw
#Combine them
df.sw.aux<-sw[[1]]
df.tw.aux<-tw[[1]]
for (i in 2:length(sw))
{
df.sw.aux<-rbind(df.sw.aux, sw[[i]])
df.tw.aux<-rbind(df.sw.aux, tw[[i]])
}
#And append them to the id and upi dataframe
df.sw<-data.frame(ix=td$id,
id=td$participant)
df.sw<-cbind(df.sw, df.sw.aux)
library(RPostgreSQL)
library(rjson)
rm(list=ls())
#First run this in the terminal to connect to the database
#ssh -L 1111:localhost:5432 wwwbramleylabppl@chost4.is.ed.ac.uk
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = 'wwwbramleylabppl_flask',
host = 'localhost', port = 1111,
password = 'testpassword',
user = 'wwwbramleylabppl_flaskuser')
# If its worked you should be able to detect these databases
dbExistsTable(con, "participant")
dbExistsTable(con, "task")
# Then you can pull the task data from postgreSQL
td <- dbGetQuery(con, "SELECT * from task")
#Here it is as json
td$subjectwise
td$trialwise
#Un-jsonify it
inv_fromJSON<-function(js)
{
js <- chartr("\'\"","\"\'",js)
fromJSON(js)
}
#and turn each subject into a dataframe
sw<-sapply(sapply(td$subjectwise, inv_fromJSON, simplify=F), as.data.frame, simplify=F)
tw<-sapply(sapply(td$trialwise, inv_fromJSON, simplify=F), as.data.frame, simplify=F)
#Combine them
df.sw.aux<-sw[[1]]
df.tw.aux<-tw[[1]]
for (i in 2:length(sw))
{
df.sw.aux<-rbind(df.sw.aux, sw[[i]])
df.tw.aux<-rbind(df.tw.aux, tw[[i]])
}
#And append them to the id and upi dataframe
df.sw<-data.frame(ix=td$id,
id=td$participant)
df.sw<-cbind(df.sw, df.sw.aux)
df.tw.aux
cbind(rep(df.sw$ix, each=N), rep(df.sw$id, each=N), df.tw.aux)
lenth(tw[[i]]$trials)
lenth(tw[[1]]$trials)
length(tw[[1]]$trials)
cbind(rep(df.sw$ix, each=N), rep(df.sw$id, each=N), df.tw.aux)
N<-length(tw[[1]]$trials)
cbind(rep(df.sw$ix, each=N), rep(df.sw$id, each=N), df.tw.aux)
library(RPostgreSQL)
library(rjson)
rm(list=ls())
#First run this in the terminal to connect to the database
#ssh -L 1111:localhost:5432 wwwbramleylabppl@chost4.is.ed.ac.uk
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = 'wwwbramleylabppl_flask',
host = 'localhost', port = 1111,
password = 'testpassword',
user = 'wwwbramleylabppl_flaskuser')
# If its worked you should be able to detect these databases
dbExistsTable(con, "participant")
dbExistsTable(con, "task")
# Then you can pull the task data from postgreSQL
td <- dbGetQuery(con, "SELECT * from task")
#Here it is as json
td$subjectwise
td$trialwise
#Un-jsonify it
inv_fromJSON<-function(js)
{
js <- chartr("\'\"","\"\'",js)
fromJSON(js)
}
#and turn each subject into a dataframe
sw<-sapply(sapply(td$subjectwise, inv_fromJSON, simplify=F), as.data.frame, simplify=F)
tw<-sapply(sapply(td$trialwise, inv_fromJSON, simplify=F), as.data.frame, simplify=F)
N<-length(tw[[1]]$trials)
#Combine them
df.sw.aux<-sw[[1]]
df.tw.aux<-tw[[1]]
for (i in 2:length(sw))
{
df.sw.aux<-rbind(df.sw.aux, sw[[i]])
df.tw.aux<-rbind(df.tw.aux, tw[[i]])
}
#And append them to the id and upis
df.sw<-data.frame(ix=td$id,
id=td$participant)
df.sw<-cbind(df.sw, df.sw.aux)
df.tw<-cbind(ix=rep(df.sw$ix, each=N), id=rep(df.sw$id, each=N), df.tw.aux)
setwd("~/Dropbox/UoE/website/bramleylab-flask-tasks")
library(RPostgreSQL)
library(rjson)
rm(list=ls())
#First run this in the terminal to connect to the database
#ssh -L 1111:localhost:5432 wwwbramleylabppl@chost4.is.ed.ac.uk
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = 'wwwbramleylabppl_flask',
host = 'localhost', port = 1111,
password = 'testpassword',
user = 'wwwbramleylabppl_flaskuser')
# If its worked you should be able to detect these databases
dbExistsTable(con, "participant")
dbExistsTable(con, "task")
# Then you can pull the task data from postgreSQL
td <- dbGetQuery(con, "SELECT * from task")
#Here it is as json
td$subjectwise
td$trialwise
#Un-jsonify it
inv_fromJSON<-function(js)
{
js <- chartr("\'\"","\"\'",js)
fromJSON(js)
}
#and turn each subject into a dataframe
sw<-sapply(sapply(td$subjectwise, inv_fromJSON, simplify=F), as.data.frame, simplify=F)
tw<-sapply(sapply(td$trialwise, inv_fromJSON, simplify=F), as.data.frame, simplify=F)
N<-length(tw[[1]]$trials)
#Combine them
df.sw.aux<-sw[[1]]
df.tw.aux<-tw[[1]]
for (i in 2:length(sw))
{
df.sw.aux<-rbind(df.sw.aux, sw[[i]])
df.tw.aux<-rbind(df.tw.aux, tw[[i]])
}
#And append them to the id and upis
df.sw<-data.frame(ix=td$id,
id=td$participant)
df.sw<-cbind(df.sw, df.sw.aux)
df.tw<-cbind(ix=rep(df.sw$ix, each=N), id=rep(df.sw$id, each=N), df.tw.aux)
save('flaskdemodata.rdata', df.sw, df.tw)
save(file='flaskdemodata.rdata', df.sw, df.tw)
tmptd <- dbGetQuery(con, "SELECT * from task")
tmptd
tmptd <- dbGetQuery(con, "SELECT * from participant")
tmptd
